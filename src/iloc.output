Terminals unused in grammar

   DOUTPUT


Grammar

    0 $accept: iloc_program $end

    1 iloc_program: instruction_list

    2 instruction_list: instruction
    3                 | label_def instruction
    4                 | instruction instruction_list
    5                 | label_def instruction instruction_list

    6 instruction: operation
    7            | OPEN_BRACKET operation_list CLOSE_BRACKET

    8 operation_list: operation
    9               | operation SEMICOLON operation_list

   10 operation: the_opcode operand_list ARROW operand_list
   11          | the_opcode operand_list
   12          | the_opcode ARROW operand_list
   13          | the_opcode

   14 the_opcode: OPCODE

   15 operand_list: reg
   16             | reg COMMA operand_list
   17             | const
   18             | const COMMA operand_list
   19             | lbl
   20             | lbl COMMA operand_list

   21 reg: REGISTER

   22 const: NUMBER

   23 lbl: LABEL

   24 label_def: TARGET


Terminals, with rules where they appear

$end (0) 0
error (256)
OPEN_BRACKET (258) 7
CLOSE_BRACKET (259) 7
SEMICOLON (260) 9
COMMA (261) 16 18 20
ARROW (262) 10 12
OPCODE (263) 14
DOUTPUT (264)
REGISTER (265) 21
NUMBER (266) 22
LABEL (267) 23
TARGET (268) 24


Nonterminals, with rules where they appear

$accept (14)
    on left: 0
iloc_program (15)
    on left: 1, on right: 0
instruction_list (16)
    on left: 2 3 4 5, on right: 1 4 5
instruction (17)
    on left: 6 7, on right: 2 3 4 5
operation_list (18)
    on left: 8 9, on right: 7 9
operation (19)
    on left: 10 11 12 13, on right: 6 8 9
the_opcode (20)
    on left: 14, on right: 10 11 12 13
operand_list (21)
    on left: 15 16 17 18 19 20, on right: 10 11 12 16 18 20
reg (22)
    on left: 21, on right: 15 16
const (23)
    on left: 22, on right: 17 18
lbl (24)
    on left: 23, on right: 19 20
label_def (25)
    on left: 24, on right: 3 5


State 0

    0 $accept: . iloc_program $end

    OPEN_BRACKET  shift, and go to state 1
    OPCODE        shift, and go to state 2
    TARGET        shift, and go to state 3

    iloc_program      go to state 4
    instruction_list  go to state 5
    instruction       go to state 6
    operation         go to state 7
    the_opcode        go to state 8
    label_def         go to state 9


State 1

    7 instruction: OPEN_BRACKET . operation_list CLOSE_BRACKET

    OPCODE  shift, and go to state 2

    operation_list  go to state 10
    operation       go to state 11
    the_opcode      go to state 8


State 2

   14 the_opcode: OPCODE .

    $default  reduce using rule 14 (the_opcode)


State 3

   24 label_def: TARGET .

    $default  reduce using rule 24 (label_def)


State 4

    0 $accept: iloc_program . $end

    $end  shift, and go to state 12


State 5

    1 iloc_program: instruction_list .

    $default  reduce using rule 1 (iloc_program)


State 6

    2 instruction_list: instruction .
    4                 | instruction . instruction_list

    OPEN_BRACKET  shift, and go to state 1
    OPCODE        shift, and go to state 2
    TARGET        shift, and go to state 3

    $default  reduce using rule 2 (instruction_list)

    instruction_list  go to state 13
    instruction       go to state 6
    operation         go to state 7
    the_opcode        go to state 8
    label_def         go to state 9


State 7

    6 instruction: operation .

    $default  reduce using rule 6 (instruction)


State 8

   10 operation: the_opcode . operand_list ARROW operand_list
   11          | the_opcode . operand_list
   12          | the_opcode . ARROW operand_list
   13          | the_opcode .

    ARROW     shift, and go to state 14
    REGISTER  shift, and go to state 15
    NUMBER    shift, and go to state 16
    LABEL     shift, and go to state 17

    $default  reduce using rule 13 (operation)

    operand_list  go to state 18
    reg           go to state 19
    const         go to state 20
    lbl           go to state 21


State 9

    3 instruction_list: label_def . instruction
    5                 | label_def . instruction instruction_list

    OPEN_BRACKET  shift, and go to state 1
    OPCODE        shift, and go to state 2

    instruction  go to state 22
    operation    go to state 7
    the_opcode   go to state 8


State 10

    7 instruction: OPEN_BRACKET operation_list . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 23


State 11

    8 operation_list: operation .
    9               | operation . SEMICOLON operation_list

    SEMICOLON  shift, and go to state 24

    $default  reduce using rule 8 (operation_list)


State 12

    0 $accept: iloc_program $end .

    $default  accept


State 13

    4 instruction_list: instruction instruction_list .

    $default  reduce using rule 4 (instruction_list)


State 14

   12 operation: the_opcode ARROW . operand_list

    REGISTER  shift, and go to state 15
    NUMBER    shift, and go to state 16
    LABEL     shift, and go to state 17

    operand_list  go to state 25
    reg           go to state 19
    const         go to state 20
    lbl           go to state 21


State 15

   21 reg: REGISTER .

    $default  reduce using rule 21 (reg)


State 16

   22 const: NUMBER .

    $default  reduce using rule 22 (const)


State 17

   23 lbl: LABEL .

    $default  reduce using rule 23 (lbl)


State 18

   10 operation: the_opcode operand_list . ARROW operand_list
   11          | the_opcode operand_list .

    ARROW  shift, and go to state 26

    $default  reduce using rule 11 (operation)


State 19

   15 operand_list: reg .
   16             | reg . COMMA operand_list

    COMMA  shift, and go to state 27

    $default  reduce using rule 15 (operand_list)


State 20

   17 operand_list: const .
   18             | const . COMMA operand_list

    COMMA  shift, and go to state 28

    $default  reduce using rule 17 (operand_list)


State 21

   19 operand_list: lbl .
   20             | lbl . COMMA operand_list

    COMMA  shift, and go to state 29

    $default  reduce using rule 19 (operand_list)


State 22

    3 instruction_list: label_def instruction .
    5                 | label_def instruction . instruction_list

    OPEN_BRACKET  shift, and go to state 1
    OPCODE        shift, and go to state 2
    TARGET        shift, and go to state 3

    $default  reduce using rule 3 (instruction_list)

    instruction_list  go to state 30
    instruction       go to state 6
    operation         go to state 7
    the_opcode        go to state 8
    label_def         go to state 9


State 23

    7 instruction: OPEN_BRACKET operation_list CLOSE_BRACKET .

    $default  reduce using rule 7 (instruction)


State 24

    9 operation_list: operation SEMICOLON . operation_list

    OPCODE  shift, and go to state 2

    operation_list  go to state 31
    operation       go to state 11
    the_opcode      go to state 8


State 25

   12 operation: the_opcode ARROW operand_list .

    $default  reduce using rule 12 (operation)


State 26

   10 operation: the_opcode operand_list ARROW . operand_list

    REGISTER  shift, and go to state 15
    NUMBER    shift, and go to state 16
    LABEL     shift, and go to state 17

    operand_list  go to state 32
    reg           go to state 19
    const         go to state 20
    lbl           go to state 21


State 27

   16 operand_list: reg COMMA . operand_list

    REGISTER  shift, and go to state 15
    NUMBER    shift, and go to state 16
    LABEL     shift, and go to state 17

    operand_list  go to state 33
    reg           go to state 19
    const         go to state 20
    lbl           go to state 21


State 28

   18 operand_list: const COMMA . operand_list

    REGISTER  shift, and go to state 15
    NUMBER    shift, and go to state 16
    LABEL     shift, and go to state 17

    operand_list  go to state 34
    reg           go to state 19
    const         go to state 20
    lbl           go to state 21


State 29

   20 operand_list: lbl COMMA . operand_list

    REGISTER  shift, and go to state 15
    NUMBER    shift, and go to state 16
    LABEL     shift, and go to state 17

    operand_list  go to state 35
    reg           go to state 19
    const         go to state 20
    lbl           go to state 21


State 30

    5 instruction_list: label_def instruction instruction_list .

    $default  reduce using rule 5 (instruction_list)


State 31

    9 operation_list: operation SEMICOLON operation_list .

    $default  reduce using rule 9 (operation_list)


State 32

   10 operation: the_opcode operand_list ARROW operand_list .

    $default  reduce using rule 10 (operation)


State 33

   16 operand_list: reg COMMA operand_list .

    $default  reduce using rule 16 (operand_list)


State 34

   18 operand_list: const COMMA operand_list .

    $default  reduce using rule 18 (operand_list)


State 35

   20 operand_list: lbl COMMA operand_list .

    $default  reduce using rule 20 (operand_list)
